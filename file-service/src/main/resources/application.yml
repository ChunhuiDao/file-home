spring:
  profiles:
    active: @profiles.active@
  # 数据库配置
  datasource:
    # hikari连接池配置
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      # 连接池名称，默认HikariPool-1
      pool-name: HikariPool-1
      # 最大连接数，小于等于0会被重置为默认值10，大于零小于1会被重置为minimum-idle的值，理论上应等于数据库服务器的线程数
      maximum-pool-size: 8
      # 连接超时时间，单位为毫秒，小于250毫秒，会被重置为默认值30秒
      connection-timeout: 60000
      # 最小空闲连接，默认值10，小于0或大于maximum-pool-size，都会重置为maximum-pool-size
      minimum-idle: 1
      # 空闲连接超时时间，单位为毫秒，默认值600000（10分钟），大于max-lifetime+1秒且max-lifetime>0，会被重置为0，不等于0且小于10秒，会被重置为10秒，
      # 只有空闲连接数大于最大连接数且空闲时间超过该值，才会被释放
      idle-timeout: 600000
      # 连接最大存活时间，单位为毫秒，不等于0且不小于30秒，否则会被重置为默认值30分钟。设置应比数据库超时时间短
      max-lifetime: 1200000
  # redis配置
  redis:
    # redis数据库索引，默认0
    database: 0
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 500ms
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 1
    # 连接超时时间
    timeout: 1s
  # session配置
  session:
    store-type: redis
logging:
  level:
    org:
      springframework:
        boot:
          autoconfigure: error
# mybatis-plus配置
mybatis-plus:
  # mapper xml目录，多个目录用逗号或者分号分隔
  mapper-locations: classpath:mapper/**/*Mapper.xml
  # 实体扫描目录，多个目录用逗号或者分号分隔
  type-aliases-package: com.dch.fileservice.model
  global-config:
    db-config:
      # 全局主键策略，实体策略会覆盖全局策略。auto：数据库ID自增，依赖数据库；none：没有主键策略，默认根据雪花算法生成；input：用户输入；assign_id：全局唯一，数值类型；assign_uuid：全局唯一（UUID）
      id-type: auto
      # 字段插入策略。ignored：所有字段设置到insert语句中；not_null：忽略null的字段，不忽略""；not_empty：忽略null和空串；
      insert-strategy: not_null
      # 字段更新策略。同上
      update-strategy: not_null
      # 查询字段选择策略。同上
      select-strategy: not_null
  configuration:
    database-id: mysql
    # 数据库下划线自动映射实体驼峰
    map-underscore-to-camel-case: true
    # 如果查询结果中包含空值的列，则不会映射这个字段
    call-setters-on-nulls: true
    # sql控制台打印
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

---
######################################## dev ########################################
server:
  port: 8011
spring:
  profiles: dev
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.0.140:3306/file_home?useUnicode=true&characterEncoding=utf8
    username: root
    password: 123@Dch_
  # redis配置
  redis:
    host: 192.168.0.140
    port: 6379
    password:
logging:
  config: classpath:logback-dev.xml

---
######################################## prod ########################################
server:
  port: 8011
spring:
  profiles: prod
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.0.140:3306/file_home?useUnicode=true&characterEncoding=utf8
    username: root
    password: 123@Dch_
  # redis配置
  redis:
    host: 192.168.0.140
    port: 6379
    password:
logging:
  config: classpath:logback-prod.xml